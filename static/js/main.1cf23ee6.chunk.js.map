{"version":3,"sources":["components/AboutComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/HomeComponent.js","components/ProjectsComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["AboutUs","ContactUs","Header","useState","isOpen","setIsOpen","Fragment","Navbar","light","sticky","expand","Container","NavbarBrand","className","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","Home","bottom","cascade","Row","Col","xs","md","size","offset","Button","outline","color","Projects","Main","path","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4RAUeA,MARf,WACI,OACI,6BACI,kDCHG,SAASC,IACpB,OACI,6BACI,qD,oECOG,SAASC,IAAU,IAAD,EACAC,oBAAS,GADT,mBACtBC,EADsB,KACdC,EADc,KAM7B,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,OAAO,MAAMC,OAAO,MAC9B,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAaC,UAAU,mCAAmCC,KAAK,KAA/D,eACA,kBAACC,EAAA,EAAD,CAAeC,QATZ,kBAAMX,GAAWD,MAUpB,kBAACa,EAAA,EAAD,CAAUb,OAAQA,EAAQc,QAAM,GAC5B,yBAAKL,UAAU,6BACf,kBAACM,EAAA,EAAD,CAAKD,QAAM,EAACL,UAAU,+DAClB,kBAACO,EAAA,EAAD,KACI,kBAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,SAAjC,SAGJ,kBAACD,EAAA,EAAD,KACI,kBAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,aAAjC,aAEJ,kBAACD,EAAA,EAAD,KACI,kBAAC,IAAD,CAASP,UAAU,qEAAqEQ,GAAG,SAA3F,gBAEJ,kBAACD,EAAA,EAAD,KACI,kBAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,UAAjC,UAEJ,kBAACD,EAAA,EAAD,KACI,kBAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,YAAjC,kB,6CCMbC,MAzCf,WACI,OACA,6BACI,yBAAKT,UAAU,wBACX,yBAAKA,UAAU,iBAEX,kBAACF,EAAA,EAAD,CAAWE,UAAU,eACrB,kBAAC,IAAD,CAAMU,QAAM,EAACC,SAAO,GAChB,6BACI,4CACA,0EAQhB,yBAAKX,UAAU,YACX,kBAACF,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMY,QAAM,EAACC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAKZ,UAAU,QACX,kBAACa,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,CAACC,KAAM,OAAQC,OAAQ,GAAIjB,UAAU,WAElD,0CAEJ,kBAACa,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,CAACC,KAAM,EAAGC,OAAQ,IAC/B,2ZAGA,kBAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,QAAQjB,QAAS,kBAAC,EAAD,OAAvC,eC1BTkB,MARf,WACI,OACI,sDCQO,SAASC,IACpB,OACI,kBAAC,IAAD,KACI,6BACI,kBAACjC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkC,KAAK,QAAQC,OAAS,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAS,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAS,kBAAM,kBAACpC,EAAD,SACtC,kBAAC,IAAD,CAAOmC,KAAK,SAASC,OAAS,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAUhB,GAAG,a,kBCFlBiB,MAXf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,IAAD,KACA,kBAACsB,EAAD,SCDcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1cf23ee6.chunk.js","sourcesContent":["import React from 'react'\n\nfunction AboutUs() {\n    return (\n        <div>\n            <h1>Its All About Me</h1>\n        </div>\n    )\n}\n\nexport default AboutUs\n","import React from 'react'\n\nexport default function ContactUs() {\n    return (\n        <div>\n            <h1>Please Contact Me!!!</h1>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem, \n    Container } from 'reactstrap';\n  import { NavLink } from 'react-router-dom';\n\n\nexport default function Header() {\n    const[ isOpen, setIsOpen ] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n\n    \n    return (\n        <React.Fragment>\n            <Navbar light sticky=\"top\" expand=\"sm\">\n                <Container>\n                <NavbarBrand className=\" d-md-none header-title  rg-head\" href=\"/\">IAN DEJESUS</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <div className=\" d-md-flex d-block w-100 \">\n                    <Nav navbar className=\"mx-auto w-auto justify-content-center align-items-md-center\" >\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\n                        </NavItem>\n\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/projects\">Projects</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link navbar-brand mx-2 d-none d-md-inline header-title rg-head\" to=\"/home\">IAN DEJESUS</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/contact\">Contact</NavLink>\n                        </NavItem>\n                    </Nav>\n                    </div>\n                </Collapse>\n                </Container>\n            </Navbar>\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport { Container, Col, Row, Button,  } from 'reactstrap';\nimport AboutUs from './AboutComponent';\nimport Fade from 'react-reveal/Fade';\n\n\nfunction Home() {\n    return (\n    <div>\n        <div className=\"full-content section\">\n            <div className=\"title-content\">\n\n                <Container className=\"text-center\">\n                <Fade bottom cascade>\n                    <div>\n                        <h1>Hi, I'm Ian </h1>\n                        <h4>An inspiring Fullstack Web Developer.</h4>\n                    </div>\n                </Fade>\n                </Container>\n                </div>\n\n        </div>\n\n        <div className=\"section \">\n            <Container>\n            <Fade bottom cascade>\n                <Row className=\"py-5\">\n                    <Col xs={12} md={{size: 'auto', offset: 0}} className=\"mx-auto\">\n                       \n                        <h1>About Me.</h1>\n                    </Col>\n                    <Col xs={12} md={{size: 8, offset: 0}}>\n                        <p>\n                        Exceptionally creative and reliable with an outstanding customer service record, superb work ethic, and an excellent team player. Highly Acknowledgeable in a wide variety of computer languages as well as the principles and techniques of website construction. Proven ability to adapt, construct, and optimize web functionality that improve data retrieval and workflow efficiencies.\n                        </p>\n                        <Button outline color=\"light\" onClick={<AboutUs />}>More</Button>\n                    </Col>\n                </Row>\n            </Fade>\n            </Container> \n        </div>\n\n    </div>  \n    );\n}\n\nexport default Home\n","import React from 'react'\n\nfunction Projects() {\n    return (\n        <div>\n            Here are My Projects\n        </div>\n    )\n}\n\nexport default Projects\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect } from \"react-router-dom\";\nimport AboutUs from './AboutComponent';\nimport ContactUs from './ContactComponent';\nimport Header from './HeaderComponent';\nimport Home from './HomeComponent';\nimport Projects from './ProjectsComponent';\n\nexport default function Main() {\n    return (\n        <Router>\n            <div>\n                <Header />\n                <Switch>\n                    <Route path=\"/home\" render={ () => <Home /> } />\n                    <Route path=\"/projects\" render={ () => <Projects /> } />\n                    <Route path=\"/contact\" render={ () => <ContactUs /> } />\n                    <Route path=\"/about\" render={ () => <AboutUs /> } />\n                    <Redirect to='/home' />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\n// styles\nimport './css/App.scss';\nimport './css/App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Main />\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}